---
rsh - RevisionSH
-- git replacement in mostly pure sh!
---
Status
-- this is very WIP still
-- rsh does not currently work but progress is being made
---- stay tuned...
---
Usage
-- rsh works with most standard git commands
---- but also provides alternatives and short-hands
-- ./rsh
---- g/grab/clone
  >> grabs a project from $push_path or URL
    >> default operation if URL is detected
---- i/init
  >> initializes a project by creating rsh.conf
---- p/pull/yank
  >> pulls recent changes from $pull_remote
---- u/push/send
  >> pushes data to $push_path
---- r/ver/revision/commit
  >> creates a new revision
    >> replacement for commit
    >> all pushed code creates a new version
    >> ALWAYS TEST CODE BEFORE PUSH
---- h/help
  >> displays a simple usage guide
-- see ./docs for more info
---
Dependencies
-- mkdir 
---- impossible to avoid as sh can't create 
-- a shell 
---- dash, ash, bash or yash should work
  >> zsh is known to not be posix compatible
-- curl
---- only required to clone projects outside of your personal server
-- see sh-caveats for more info
---
Features/Plans
-- Minimal code base
-- Written in shm
---- distributed as sh
-- No network stack
---- changes are pushed to a folder
---- allowing for an interchangeable network stack
---- nfs/sshfs, etc or even nothing can be used!
-- Hooks!
---- hook support for all methods
---- git's hook support is rather lackluster
-- Plugin support
---- git integration
---- web front-end
  >> heavy integration
---
Server Setup
-- rsh is entirely client-side; simply set $push_path to a folder
---- all pushed changes will be sent there
---- sshfs/nfs/ftp etc can be used for a server setup
---
Configuration
-- the rsh config uses an INI style config
---- an example is present in example.conf
---- however a default is provided
---
